apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "db2-schema.fullname" . }}
  labels:
    {{- include "db2-schema.labels" . | nindent 4 }}
data:
  create_schemas.sh: |
    #!/usr/bin/env sh

    if [[ -z "${SCHEMAS}" ]]; then
      echo "No schemas provided. Exiting..."
      exit 0
    fi

    require_env_var() {
      local var_name="$1"

      if [[ -z "${var_name}" ]]; then
        echo "The variable name must be provided" >&2
        exit 1
      fi

      if [[ -z "${!var_name}" ]]; then
        echo "${var_name} must be provided as an environment variable" >&2
        exit 1
      fi
    }

    require_env_var "DATABASE_HOST"
    require_env_var "DATABASE_PORT"
    require_env_var "DATABASE_DATABASE"
    require_env_var "DATABASE_USERNAME"
    require_env_var "DATABASE_PASSWORD"

    SCHEMA_FILE="/tmp/db2-schema.sql"

    SCHEMA_LIST=$(echo "${SCHEMAS}" | tr ";" "\n")

    source /database/config/db2inst1/sqllib/db2profile

    for schema in $SCHEMA_LIST; do
      echo "create schema '${schema}';" >> "${SCHEMA_FILE}"
      echo "grant dbadm on database to user '${schema}';" >> "${SCHEMA_FILE}"
    done

    db2 -tf "${SCHEMA_FILE}"
  entrypoint.sh: |
    #!/usr/bin/env sh

    SCRIPT_DIR=$(cd $(dirname "$0"); pwd -P)

    /var/db2_setup/lib/setup_db2_instance.sh &

    sleep 360

    "${SCRIPT_DIR}/connect_remote_database.sh" "${DATABASE_HOST}" "${DATABASE_PORT}" "${DATABASE_DATABASE}" "${DATABASE_USERNAME}" "${DATABASE_PASSWORD}"
    "${SCRIPT_DIR}/create_schemas.sh"
    "${SCRIPT_DIR}/run_script.sh"
  run_script.sh: |
    #!/usr/bin/env sh

    SCRIPT_DIR=$(cd $(dirname "$0"); pwd -P)

    if [ ! -f "${SCRIPT_DIR}/custom_script.sh" ]; then
      echo "No custom script provided. Exiting..."
      exit 0
    fi

    source /database/config/db2inst1/sqllib/db2profile

    "${SCRIPT_DIR}/custom_script.sh" "${DATABASE_DATABASE}"
  {{- if .Values.customScript }}
  custom_script.sh: |
    {{- .Values.customScript | nindent 4 }}
  {{- end }}
